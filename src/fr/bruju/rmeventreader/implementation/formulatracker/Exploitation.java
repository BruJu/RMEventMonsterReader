package fr.bruju.rmeventreader.implementation.formulatracker;


import fr.bruju.rmeventreader.actionmakers.actionner.Operator;
import fr.bruju.rmeventreader.implementation.formulatracker.actionmaker.MaillonActionMaker;
import fr.bruju.rmeventreader.implementation.formulatracker.formule.attaques.Attaques;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.Maillon;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.affichage.MaillonSetAffichagegetString;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.affichage.MaillonSystemOut;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.extension.Borne;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.extension.Encadrer;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.affichage.MaillonEcritureFichier;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.filtres.MaillonFiltreAttaque;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.filtres.MaillonFiltreOperateur;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.injection.MaillonDesinjecteur;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.injection.MaillonEvaluationPartielle;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.maillonssimples.MNePossedeAucunObjet;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.maillonssimples.MaillonSupprimerCondition;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.operation.MaillonRetirerSiInutile;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.operation.MaillonSuppresseur;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.operation.MaillonUnificateur;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.operation.factorisation.ConversionVariadique;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.operation.factorisation.Factorisation;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.operation.inclusionglobale.MaillonIntegration;

@SuppressWarnings("unused")
public class Exploitation {

	public void exploiter() {
		Maillon[] maillons = new Maillon[] {
				new MaillonActionMaker(),
				//new MaillonFiltreOperateur(Operator.AFFECTATION),
				//new MaillonFiltreAttaque("Triple Taillade"),
				
				new MNePossedeAucunObjet(),
				new MaillonSuppresseur(),
				
				new MaillonEvaluationPartielle(),
				new MaillonIntegration(),
				new MaillonDesinjecteur(),						// A faire aprés l'inclusion
				
				
				new MaillonUnificateur(),						// A faire aprés désinjection
				
				new Factorisation(),
				

				new MaillonRetirerSiInutile(),
				new Borne(),
				new Encadrer(),
				new ConversionVariadique(),
				//new MaillonSupprimerCondition(),
				new MaillonSetAffichagegetString(0, 50000000),
				new MaillonSystemOut(),
				new MaillonEcritureFichier()
		};
		
		Attaques attaques = new Attaques();
		
		
		for (Maillon maillon : maillons) {
			maillon.traiter(attaques);
		}

		System.out.println("=FIN=");
	}

}
