package fr.bruju.rmeventreader.implementation.formulatracker;


import fr.bruju.rmeventreader.implementation.formulatracker.contexte.Attaques;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.Initialisateur;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MAfficheur;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MAfficheurJoli;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MFactoriser;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MFiltre;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MSuppresseurdAffectation;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MSupresseurDeConditions;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.Maillon;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.affichage.MDetAffichageSimple;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.affichage.MSystemOut;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.affichage.MWriteFile;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.injection.desinjectioncomposant.MDesinjecteur;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.operation.desinclusion.DesinclusionAttaques;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.operation.inclusionglobale.MIncluseur;
import fr.bruju.rmeventreader.implementation.formulatracker.operateurdesimplification.operation.supressiondeconditions.SupressionDeConditions;
import fr.bruju.rmeventreader.implementation.formulatracker.simplification.injectionvaleur.MInjecter;

@SuppressWarnings("unused")
public class Exploitation {

	public void exploiter() {
		Maillon[] maillons = new Maillon[] {
				new Initialisateur(),
				new MSuppresseurdAffectation(),		// Enlever les affectations
				
				
				//new MFiltre("Tetraelement"),
				//new MAfficheurJoli(0, 50000),
				new SupressionDeConditions(),
				new MInjecter(),
				new MIncluseur(),
				new MFactoriser(),
				new MDesinjecteur(),					// A faire apr√©s l'inclusion
				new MDetAffichageSimple(0, 5000000),
				new MSystemOut(),
				new MWriteFile(),
				//new MAfficheurJoli(50000, 150000),

				//DesinclusionAttaques.getMaillon(),
				//new MAfficheurJoli(0, 50000),
				//new MAfficheurJoli(0, 50000)
		};
		
		Attaques attaques = new Attaques();
		
		
		for (Maillon maillon : maillons) {
			maillon.traiter(attaques);
		}

		System.out.println("=FIN=");
	}

}
