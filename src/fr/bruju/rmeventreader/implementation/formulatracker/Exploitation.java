package fr.bruju.rmeventreader.implementation.formulatracker;


import fr.bruju.rmeventreader.implementation.formulatracker.contexte.Attaques;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.Initialisateur;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MAfficheur;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MDesincluseur;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MFactoriser;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MFiltre;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MIncluseur;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MInjecter;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MSuppresseurdAffectation;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.MSupresseurDeConditions;
import fr.bruju.rmeventreader.implementation.formulatracker.exploitation.Maillon;

@SuppressWarnings("unused")
public class Exploitation {

	public void exploiter() {
		Maillon[] maillons = new Maillon[] {
				new Initialisateur(),
				new MSuppresseurdAffectation(),		// Enlever les affectations
				
				
				//new MFiltre("Erqaam"),
				new MFiltre("Debug"),

				new MAfficheur(0, 50000),
				//new MInjecter(),
				//new MIncluseur(),
				new MFactoriser(),
				//new MFactoriser(),
				//new MDesincluseur(),
				//new MSupresseurDeConditions(),
				new MAfficheur(0, 50000)
		};
		
		Attaques attaques = new Attaques();
		
		
		for (Maillon maillon : maillons) {
			maillon.traiter(attaques);
		}

	}

}
