package fr.bruju.rmeventreader.implementation.recomposeur.exploitation;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

import fr.bruju.rmeventreader.implementation.recomposeur.Parametres;
import fr.bruju.rmeventreader.utilitaire.Utilitaire;

public class BaseDeVariables {
	private int premiereVariableNonAllouee = 10001;

	private Map<Integer, Statistique> statistiquesConnues;

	private Map<String, PersonnageReel> personnagesConnus;
	private Map<Set<PersonnageReel>, PersonnageUnifie> unificationsConnues;

	public BaseDeVariables() {
		statistiquesConnues = new HashMap<>();
		personnagesConnus = new HashMap<>();
		unificationsConnues = new HashMap<>();
	}
	
	public Set<Integer> getVariablesStatistiques() {
		return statistiquesConnues.keySet();
	}

	public void remplir(Parametres parametres) {
		List<String[]> param = parametres.getParametres("Statistiques");

		param.forEach(triplet -> {
			String nomPerso = triplet[0];
			String nomStat = triplet[1];

			boolean estPropriete = triplet[2].charAt(0) == 'S';

			if (estPropriete) {
				triplet[2] = triplet[2].substring(1);
			}
			
			int idVariable = Integer.decode(triplet[2]);

			creerStatistique(nomPerso, nomStat, idVariable, estPropriete);
		});
	}

	private void creerStatistique(String nomPerso, String nomStat, int idVariable, boolean estPropriete) {
		PersonnageReel perso = Utilitaire.Maps.getX(personnagesConnus, nomPerso, () -> new PersonnageReel(nomPerso));

		Statistique stat = new Statistique(perso, nomStat, idVariable, estPropriete);

		statistiquesConnues.put(stat.position, stat);
		perso.addStatistique(stat);
	}

	public PersonnageUnifie unifierPersonnage(Personnage p1, Personnage p2) {
		Set<PersonnageReel> personnagesReels = new TreeSet<PersonnageReel>();

		personnagesReels.addAll(p1.getPersonnagesReels());
		personnagesReels.addAll(p2.getPersonnagesReels());

		return Utilitaire.Maps.getX(unificationsConnues, personnagesReels,
				() -> new PersonnageUnifie(personnagesReels, this));
	}

	public Statistique creerStatistique(PersonnageUnifie personnageUnifie, String nomStat, boolean estPropriete) {
		Statistique stat = new Statistique(personnageUnifie, nomStat, premiereVariableNonAllouee++, estPropriete);
		statistiquesConnues.put(stat.position, stat);
		return stat;
	}

	public PersonnageReel getPersonnage(String nomLanceur) {
		return personnagesConnus.get(nomLanceur);
	}
}
